// <auto-generated />
using System;
using ClearanceCycle.DataAcess.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClearanceCycle.DataAcess.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20250218132346_init1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClearanceCycle.DataAcess.Models.ApprovalGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupTypeId")
                        .HasColumnType("int")
                        .HasColumnName("GroupTypeID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("Id"), 75);

                    b.HasIndex(new[] { "GroupTypeId" }, "IX_approvalGroups_GroupTypeID");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "GroupTypeId" }, "IX_approvalGroups_GroupTypeID"), 75);

                    b.ToTable("approvalGroups", (string)null);
                });

            modelBuilder.Entity("ClearanceCycle.DataAcess.Models.ApprovalGroupEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalGroupId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("Id"), 75);

                    b.HasIndex(new[] { "ApprovalGroupId" }, "IX_ApprovalGroupEmployees_ApprovalGroupId");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "ApprovalGroupId" }, "IX_ApprovalGroupEmployees_ApprovalGroupId"), 75);

                    b.HasIndex(new[] { "EmployeeId" }, "IX_ApprovalGroupEmployees_EmployeeId");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "EmployeeId" }, "IX_ApprovalGroupEmployees_EmployeeId"), 75);

                    b.ToTable("ApprovalGroupEmployees");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ApprovalGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalGroup");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ApprovalGroupEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalGroupId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalGroupId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ApprovalGroupEmployee");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ClearanceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActionAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("ClearanceRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClearanceRequestId");

                    b.ToTable("ClearanceHistories");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ClearanceReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClearanceReasons");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ClearanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClearanceReasonId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastWorkingDayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResignationFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResigneeHrId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResigneeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StepApprovalGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClearanceReasonId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StepApprovalGroupId");

                    b.ToTable("ClearanceRequests");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DirHrId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MangerHrId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Addresss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ContractTybeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DirectMangerHrId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DueVacation")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeePositionId")
                        .HasColumnType("int");

                    b.Property<bool>("ForceToChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HrId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastReset")
                        .HasColumnType("datetime2");

                    b.Property<int>("LayerId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MajourAreaId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NavColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PasswordExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanOptionId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousVacation")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SidbarColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SmsRestPasswordDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("SubDepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("TakenVacation")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VactionBalance")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("MajourAreaId");

                    b.HasIndex("SubDepartmentId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Function", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubDepartmentId");

                    b.ToTable("Function");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.MajourArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MajourArea");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.StepApprovalGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string>("ApprovalGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentStepId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StepApprovalGroups");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.SubDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("HeadCount")
                        .HasColumnType("int");

                    b.Property<string>("ManagerHrid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupied")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SubDepartment");
                });

            modelBuilder.Entity("ClearanceCycle.DataAcess.Models.ApprovalGroupEmployee", b =>
                {
                    b.HasOne("ClearanceCycle.DataAcess.Models.ApprovalGroup", "ApprovalGroup")
                        .WithMany("ApprovalGroupEmployees")
                        .HasForeignKey("ApprovalGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalGroup");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ApprovalGroupEmployee", b =>
                {
                    b.HasOne("ClearanceCycle.Domain.Entities.ApprovalGroup", "ApprovalGroup")
                        .WithMany("ApprovalGroupEmployees")
                        .HasForeignKey("ApprovalGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClearanceCycle.Domain.Entities.Employee", "Employee")
                        .WithMany("ApprovalGroupEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalGroup");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ClearanceHistory", b =>
                {
                    b.HasOne("ClearanceCycle.Domain.Entities.ClearanceRequest", "ClearanceRequest")
                        .WithMany("ClearanceHistories")
                        .HasForeignKey("ClearanceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClearanceRequest");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ClearanceRequest", b =>
                {
                    b.HasOne("ClearanceCycle.Domain.Entities.ClearanceReason", "ClearanceReason")
                        .WithMany()
                        .HasForeignKey("ClearanceReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClearanceCycle.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClearanceCycle.Domain.Entities.StepApprovalGroup", "StepApprovalGroup")
                        .WithMany("ClearanceRequests")
                        .HasForeignKey("StepApprovalGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClearanceReason");

                    b.Navigation("Employee");

                    b.Navigation("StepApprovalGroup");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Employee", b =>
                {
                    b.HasOne("ClearanceCycle.Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClearanceCycle.Domain.Entities.Function", "Function")
                        .WithMany("Employees")
                        .HasForeignKey("FunctionId");

                    b.HasOne("ClearanceCycle.Domain.Entities.MajourArea", "MajourArea")
                        .WithMany("Employees")
                        .HasForeignKey("MajourAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClearanceCycle.Domain.Entities.SubDepartment", "SubDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("SubDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Function");

                    b.Navigation("MajourArea");

                    b.Navigation("SubDepartment");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Function", b =>
                {
                    b.HasOne("ClearanceCycle.Domain.Entities.SubDepartment", "SubDepartment")
                        .WithMany("Functions")
                        .HasForeignKey("SubDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubDepartment");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.SubDepartment", b =>
                {
                    b.HasOne("ClearanceCycle.Domain.Entities.Department", "Department")
                        .WithMany("SubDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ClearanceCycle.DataAcess.Models.ApprovalGroup", b =>
                {
                    b.Navigation("ApprovalGroupEmployees");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ApprovalGroup", b =>
                {
                    b.Navigation("ApprovalGroupEmployees");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.ClearanceRequest", b =>
                {
                    b.Navigation("ClearanceHistories");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("SubDepartments");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Employee", b =>
                {
                    b.Navigation("ApprovalGroupEmployees");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.Function", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.MajourArea", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.StepApprovalGroup", b =>
                {
                    b.Navigation("ClearanceRequests");
                });

            modelBuilder.Entity("ClearanceCycle.Domain.Entities.SubDepartment", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Functions");
                });
#pragma warning restore 612, 618
        }
    }
}
